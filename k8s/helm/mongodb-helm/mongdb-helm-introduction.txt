#Create key in replica
openssl rand -base64 756 > key.txt
kubectl create secret generic keyfilesecret --from-file=key.txt

#Secret create DB for script (db-entrypoint.sh) 

helm install mongodb-helm bitnami/mongodb -f .\helm\mongodb-helm\mongodb-helm-deployment.yaml
kubectl create secret generic mongodb-helm-db --from-literal=DB_USER=myuser --from-literal=DB_PASSWORD=myuserpass --from-literal=DB_NAME=test_db --from-literal=DB_PORT=27017 --from-literal=MONGO_INITDB_ROOT_USERNAME=root --from-literal=MONGO_INITDB_ROOT_PASSWORD=mongodb
kubectl create secret generic mongodb-helm-secret --from-literal=mongodb-password=myuserpass --from-literal=mongodb-root-password=mongodb --from-file=mongodb-replica-set-key=.\helm\mongodb-helm\key.txt

#Create storageclass
#Install mongodb by helm
helm install mongodb-helm bitnami/mongodb -f .\helm\mongodb-helm\mongodb-helm-deployment.yaml
#Check 
mongo
db.getSiblingDB('test_db').auth("myuser", "myuserpass");
use test_db
> db.testcoll.insert({a:1});
> db.testcoll.insert({b:2});
> db.testcoll.find();
#Check other pod db
mongo
db.getSiblingDB('test_db').auth("myuser", "myuserpass");
> db.getMongo().setSlaveOk()
> db.testcoll.find();
#Add prometheus
serviceMonitor: -> enable -> namespace: monitoring -> additionalLabels: {release: prometheus}

#Code in app.js
const mongoUrl = `mongodb://${dbUser}:${dbUserPassword}@{dbHost}:{dbPort}/${dbName}?replicaSet=rs0`
const connectWithRetry = function () { // when using with docker, at the time we up containers. Mongodb take few seconds to starting, during that time NodeJS server will try to connect MongoDB until success.
  return mongoose.connect(mongoUrl, (err) => {

##Install mongodb on alpine
echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/main' >> /etc/apk/repositories
echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/community' >> /etc/apk/repositories
apk update
apk add mongodb yaml-cpp=0.6.2-r2
mongo -version
mongo "mongodb://myuser:myuserpass@mongodb-helm-headless:27017/test_db?replicaSet=rs0"
## Install redis on alpine
apk --update add redis 
redis-cli -h demo-redis-service -p 6379 -a redispass